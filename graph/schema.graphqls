input NewPostInput {
  title: String!
  content: String!
  commentsDisabled: Boolean!
}

input NewCommentInput {
  postId: ID!
  text: String!
  parentId: ID
}

type Post {
  id: ID!
  title: String!
  content: String!
  commentsDisabled: Boolean!
  comments(after: String, limit: Int): CommentConnection!
}

type Comment {
  id: ID!
  postId: ID!
  text: String!
  parentId: ID
  createdAt: String!
  children(after: String, limit: Int): CommentConnection!
}

type CommentConnection {
  edges: [Comment!]!
  pageInfo: PageInfo!
}

type PostConnection {
  edges: [Post!]!
  pageInfo: PageInfo!
}

type PageInfo {
  endCursor: String!
  hasNextPage: Boolean!
}

type Query {
  posts(after: String, limit: Int): PostConnection!
  post(id: ID!): Post
}

type Mutation {
  createPost(input: NewPostInput!): Post!
  createComment(input: NewCommentInput!): Comment!
}

type Subscription {
  commentAdded(postId: ID!): Comment!
}
